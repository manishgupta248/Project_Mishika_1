# Generated by Django 5.1.7 on 2025-03-25 10:54

import courses.validators
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0002_alter_department_faculty_alter_department_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated.')),
                ('is_deleted', models.BooleanField(default=False, help_text='Flag for soft deletion.')),
                ('course_code', models.CharField(db_index=True, help_text='Unique identifier for the course (e.g., CS101).', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('course_name', models.CharField(help_text='Full name of the course (e.g., Introduction to Programming).', max_length=255)),
                ('course_category', models.CharField(choices=[('COMPULSORY', 'Compulsory'), ('ELECTIVE', 'Elective')], default='COMPULSORY', help_text='Whether the course is compulsory or elective.', max_length=10)),
                ('type', models.CharField(choices=[('DISSERTATION', 'Dissertation'), ('LABORATORY', 'Laboratory'), ('PRACTICAL', 'Practical'), ('PROJECT', 'Project'), ('THEORY', 'Theory'), ('THEORY_AND_PRACTICAL', 'Theory and Practical'), ('TUTORIAL', 'Tutorial')], default='THEORY', help_text='Type of course delivery.', max_length=20)),
                ('cbcs_category', models.CharField(choices=[('MAJOR', 'Major'), ('MINOR', 'Minor'), ('CORE', 'Core'), ('DSE', 'Discipline Specific Elective'), ('GE', 'Generic Elective'), ('OE', 'Open Elective'), ('VAC', 'Value Added Course'), ('AECC', 'Ability Enhancement Compulsory Course'), ('SEC', 'Skill Enhancement Course'), ('MDC', 'Multi-Disciplinary Course'), ('IDC', 'Inter-Disciplinary Course')], default='CORE', help_text='CBCS classification of the course.', max_length=25)),
                ('maximum_credit', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20')], default=0, help_text='Maximum credit points (0-20).')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, editable=False, help_text='User who created this record (auto-filled).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('discipline', models.ForeignKey(help_text='Department responsible for the course.', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='academics.department')),
                ('updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, editable=False, help_text='User who last updated this record (auto-filled).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['course_code'],
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated.')),
                ('is_deleted', models.BooleanField(default=False, help_text='Flag for soft deletion.')),
                ('course_name', models.CharField(editable=False, help_text='Automatically populated from the associated course.', max_length=255)),
                ('syllabus_file', models.FileField(help_text='PDF file containing the syllabus.', max_length=255, upload_to='syllabi/%Y/%m/%d/', validators=[courses.validators.validate_pdf])),
                ('version', models.CharField(default='1.0', help_text='Syllabus version number (e.g., 1.0, 2.1).', max_length=10)),
                ('description', models.TextField(blank=True, help_text='Optional notes about this syllabus version.', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the syllabus was uploaded.')),
                ('course', models.ForeignKey(help_text='Associated course for this syllabus.', on_delete=django.db.models.deletion.CASCADE, related_name='syllabi', to='courses.course')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, editable=False, help_text='User who created this record (auto-filled).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, editable=False, help_text='User who last updated this record (auto-filled).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, editable=False, help_text='User who originally uploaded this syllabus (auto-filled).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_syllabi', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Syllabi',
                'ordering': ['course', '-version'],
            },
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_code'], name='courses_cou_course__897db7_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['discipline'], name='courses_cou_discipl_aac634_idx'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('maximum_credit__gte', 0), ('maximum_credit__lte', 20)), name='credit_range_check'),
        ),
        migrations.AddIndex(
            model_name='syllabus',
            index=models.Index(fields=['course', 'version'], name='courses_syl_course__2a577a_idx'),
        ),
        migrations.AddIndex(
            model_name='syllabus',
            index=models.Index(fields=['uploaded_at'], name='courses_syl_uploade_b03345_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='syllabus',
            unique_together={('course', 'version')},
        ),
    ]
